score <- predict(model, as.data.frame(u[,(1:k)]))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u[,(1:k)]))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
# Get the results for the true data
coefs <- glm(Label ~ ., data = data)$coefficients
# reproducibility
set.seed(123)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u[,(1:k)]))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u[,(1:k)]))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u[,(1:k)]))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
set.seed(123)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
simul <- function(x, n0, n1, mu, k, alpha, u){
z_t <- mvrnorm(n1, mu = rep(mu, k), Sigma = diag(k))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
return(1*((ks.test(score[1:n0], score[(n0+1):(n0+n1)])$p.value) > alpha))
}
n0 <- 80
n1 <- 90
k <- 3
P <- 10000
alpha <- 0.05
x <- mvrnorm(n0, mu = rep(0, k), Sigma = diag(k))
z <- mvrnorm(n1, mu = rep(0, k), Sigma = diag(k))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
t_l <- c()
cl <- makeCluster(detectCores())
for(mu in seq(0, 0.5, by = 0.1)){
clusterExport(cl, c("simul", "mvrnorm", "x", "n0", "n1", "mu", "k", "alpha", "u"))
t_l <- c(t_l, parallel::parSapply(cl, seq(1, P), function(.) simul(x, n0, n1, mu, k, alpha, u)))
}
t_l <- matrix(t_l, nrow = P)
stopCluster(cl)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
set.seed(123)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
simul <- function(x, n0, n1, mu, k, alpha, u){
z_t <- mvrnorm(n1, mu = rep(mu, k), Sigma = diag(k))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u_t))
return(1*((ks.test(score[1:n0], score[(n0+1):(n0+n1)])$p.value) > alpha))
}
n0 <- 80
n1 <- 90
k <- 3
P <- 10000
alpha <- 0.05
x <- mvrnorm(n0, mu = rep(0, k), Sigma = diag(k))
z <- mvrnorm(n1, mu = rep(0, k), Sigma = diag(k))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
t_l <- c()
cl <- makeCluster(detectCores())
for(mu in seq(0, 0.5, by = 0.1)){
clusterExport(cl, c("simul", "mvrnorm", "x", "n0", "n1", "mu", "k", "alpha", "u"))
t_l <- c(t_l, parallel::parSapply(cl, seq(1, P), function(.) simul(x, n0, n1, mu, k, alpha, u)))
}
t_l <- matrix(t_l, nrow = P)
stopCluster(cl)
for(i in (1:6)) print(prop.table(table(t_l[,i] )))
set.seed(123)
library(MASS)
set.seed(123)
n0 <- 80
n1 <- 90
k <- 3
P <- 10000
alpha <- 0.05
x <- mvrnorm(n0, mu = rep(0, k), Sigma = diag(k))
t_l <- rep(NA, P)
for(i in (1:P)){
z_t <- mvrnorm(n1, mu = rep(0, k), Sigma = diag(k))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u_t))
t_l[i] <- 1*((ks.test(score[1:n0], score[(n0+1):(n0+n1)])$p.value) > alpha)
}
# reproducibility
set.seed(123)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
?plot
?curve
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
t_l[,(2:5)]
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
set.seed(123)
simul <- function(x, n0, n1, mu, k, alpha, u){
z_t <- mvrnorm(n1, mu = rep(mu, k), Sigma = diag(k))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u_t))
return(1*((ks.test(score[1:n0], score[(n0+1):(n0+n1)])$p.value) > alpha))
}
n0 <- 80
n1 <- 90
k <- 3
P <- 10000
alpha <- 0.05
x <- mvrnorm(n0, mu = rep(0, k), Sigma = diag(k))
z <- mvrnorm(n1, mu = rep(0, k), Sigma = diag(k))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
t_l <- c()
cl <- makeCluster(detectCores())
for(mu in seq(0, 0.5, by = 0.1)){
clusterExport(cl, c("simul", "mvrnorm", "x", "n0", "n1", "mu", "k", "alpha"))
t_l <- c(t_l, parallel::parSapply(cl, seq(1, P), function(.) simul(x, n0, n1, mu, k, alpha)))
}
t_l <- matrix(t_l, nrow = P)
stopCluster(cl)
t_l[,(2:5)]
t_l[,(2:5)]
table(t_l[,(2:5)] )
prop.table(table(t_l[,(2:5)] ))
# reproducibility
set.seed(234)
prop.table(table(t_l[,(2:5)] ))
# reproducibility
set.seed(754)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
# reproducibility
set.seed(6344)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
# reproducibility
set.seed(6433)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
# reproducibility
set.seed(8953)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
# reproducibility
set.seed(262)
n0 <- 93
n1 <- 91
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
prop.table(table(result))
n0 <- 7342
n1 <- 5436
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
n0 <- 35
n1 <- 40
k <- 3
alpha <- 0.01
N <- 1000
# reproducibility
set.seed(262)
n0 <- 35
n1 <- 40
k <- 3
alpha <- 0.01
N <- 1000
# first attempt, same distribution: normal with mean 0 and sd 1
c(1,3,0.2)
?diag
diag(c(0.4,2,1))
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
# TODO add names: dimnames = c('Kolmogorov-Smirnov', 'Mann-Whitney')
stats <- rep(NA, N)
for(i in (1:N)){
z_t <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u_t <- rbind(cbind(x, Label = 0), cbind(z_t, Label = 1))
# First thing to do is train the model
model <- glm(Label ~ ., data = as.data.frame(u_t))
score <- predict(model, as.data.frame(u))
stats[i] <- ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic
}
hist(stats)
abline(v = quantile(stats, 1 - alpha), col = 'blue')
result <- rep(NA, N)
for(i in (1:N)){
x <- mvrnorm(n0, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
z <- mvrnorm(n1, mu = c(1,3,0.2), Sigma = diag(c(0.4,2,1)))
u <- rbind(cbind(x, Label = 0), cbind(z, Label = 1))
model <- glm(Label ~ ., data = as.data.frame(u))
score <- predict(model, as.data.frame(u))
result[i] <- 1*(ks.test(score[1:n0], score[(n0+1):(n0+n1)], alternative = "two.sided")$statistic<quantile(stats, 1 - alpha))
}
barplot(prop.table(table(result)))
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(parallel)
